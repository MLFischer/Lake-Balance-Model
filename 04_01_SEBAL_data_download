################
#SEBAL v2.0 by M.L.Fischer 05/2018
#Part 1: Download Modis Data
################

################
# Sec 1 Preparation
#
remove(list=ls()) 
removeTmpFiles(0)
library(tiff)
library(raster)
library(rgdal)
library(rgeos)
library(sp)
library(RPyGeo)
library(MODIS)
library(rts)
library(raster)
library(RCurl)

#define and set local path: 
inpath <-  "C:/..."
dpath  <-  "C:/..."
outpath <- "C:/..."
mrt_path<- "C:/..." #MODIS MRT Tool directory

#####################################
#Study area, DEM as resample pattern
setwd(inpath)
catch.shp <- readOGR(".",layer = "catch_chew_utm")
sr <- "+proj=utm +zone=37 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0" 
catch.shp<- spTransform(catch.shp,sr)
plot(catch.shp)
dem <- raster("masc_chew.tif")

######################################
#NASA Login and data selection
setNASAauth(username="...",password="...")
setMRTpath(MRTpath="C:/MRT/MRT/bin",update=T)
modisProducts() 
x<- c("MOD09GA","MOD11A1","MOD13Q1","MCD12Q1")
h=21;v=8 #location
year <- 2010
cc_perc<-c(0,0)


######################################
# Sec 2 Loop for each day
# download and process mod data if case cloudcover threshold is passed
for (i in 1:365){
day <- i 
date <- as.Date((i-1), origin = "2010-01-01")
setwd(dpath) 

#download product MOD11A1, select important bands for date "i"
ModisDownload(x="MOD11A1",h=21,v=8,dates=date,proj=T,delete=T,
              bands_subset="1 1 1 0 0 0 0 0 1 1 1 0",
              proj_type="UTM",utm_zone=37,datum="WGS84",version="006")

#select and load specific file after complete download
myFiles <- list.files(pattern = "\\.tif$")
myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]#MOD09GA
myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD11A1")]#MOD09GA
myFiles <- myFiles[which(substr(myFiles,27,35)=="Clear_day")]#MOD09GA

#take the cloud cover file, process, and mask with study area and save in "2nd_level" folder
raname <- paste(substr(myFiles[1],1,25),"_cc_day",sep="")
ra <- raster(myFiles[1])*0.0005
plot(ra);plot(catch.shp,add=T)
ra<-crop(ra,catch.shp)
ra<-mask(ra,catch.shp)
plot(ra);plot(catch.shp,add=T)
setwd(outpath)
writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)  
cc_perc[i]<- freq(ra)[1,2]/  sum(freq(ra)[1:(length(freq(ra)[,2])-1),2])

#if the cloudcover is less than 10% then ...
if (cc_perc[i]<0.1){
  setwd(dpath)
  ModisDownload(x="MOD09GA",h=21,v=8,dates=date,proj=T,delete=T,
                bands_subset="0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0",
                proj_type="UTM",utm_zone=37,datum="WGS84",version="006",pixel_size=1000)

  #################ALBEDO (Selecting, Processing, Masking)
  myFiles <- list.files(pattern = "\\.tif$")
  myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]
  myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD09GA")]
  myFiles <- myFiles[which(substr(myFiles,27,29)=="sur")]
  
  raname <- paste(substr(myFiles[1],1,25),"_albedo_sw",sep="")
  ra <- (0.0001*0.215*raster(myFiles[1]))+
        (0.0001*0.215*raster(myFiles[2]))+ 
        (0.0001*0.242*raster(myFiles[3]))+   
        (0.0001*0.129*raster(myFiles[4]))+   
        (0.0001*0.101*raster(myFiles[5]))+  
        (0.0001*0.062*raster(myFiles[6]))+    
        (0.0001*0.0036*raster(myFiles[7]))    
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)  
  ###############################

  
  ##################SOLAR AZIMUTH
  setwd(dpath) 
  myFiles <- list.files(pattern = "\\.tif$")
  myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]
  myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD09GA")]
  myFiles <- myFiles[which(substr(myFiles,27,32)=="SolarA")]
  raname <- paste(substr(myFiles[1],1,25),"SolarAzimuth",sep="")  
  
  ra <- 0.01*raster(myFiles[1])
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)      

  ##################SOLAR ZENITH
  setwd(dpath) 
  myFiles <- list.files(pattern = "\\.tif$")
  myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]
  myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD09GA")]
  myFiles <- myFiles[which(substr(myFiles,27,32)=="SolarZ")]
  raname <- paste(substr(myFiles[1],1,25),"SolarZenitH",sep="")  
  
  ra <- 0.01*raster(myFiles[1])
  ra[which(ra[]>90)]<- NA
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)      
  ########################################  
  
  ##################EMIS
  setwd(dpath) 
  myFiles <- list.files(pattern = "\\.tif$")
  myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]
  myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD11A1")]
  myFiles <- myFiles[which(substr(myFiles,27,30)=="Emis")]
  raname <- paste(substr(myFiles[1],1,25),"_eps_0",sep="")  
  
  ra <- ((0.002*raster(myFiles[1])+0.49)+(0.002*raster(myFiles[2]))+0.49) /2
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)      
  ########################################
  
  
  ##################DAY VIEW TIME
  setwd(dpath) 
  myFiles <- list.files(pattern = "\\.tif$")
  myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]
  myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD11A1")]
  myFiles <- myFiles[which(substr(myFiles,27,30)=="Day_")]
  raname <- paste(substr(myFiles[1],1,25),"_day_view_time",sep="")  
  
  ra <- raster(myFiles[1]) * 0.1
  ra[which(ra[]>24)]<- NA
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)      
  ########################################
  
  
  ####################LST
  setwd(dpath) 
  myFiles <- list.files(pattern = "\\.tif$")
  myFiles <- myFiles[which(substr(myFiles,16,25)==toString(date))]
  myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD11A1")]
  myFiles <- myFiles[which(substr(myFiles,27,31)=="LST_D")]
  raname <- paste(substr(myFiles[1],1,25),"_LST",sep="")  
  
  ra <- (0.02*raster(myFiles[1]))
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)    
  
}}


###############################
# Sec 3 
# NDVI 8 DAY (Selecting, Processing, Masking)
#
setwd(dpath) 
ModisDownload(x="MOD13Q1",h=21,v=8,dates=c("2010.03.1","2011.01.01"),proj=T,delete=F,
                bands_subset="1 0 0 0 0 0 0 0 0 0 0 0",
                proj_type="UTM",utm_zone=37,datum="WGS84",version="006")

myFiles <- list.files(pattern = "\\.tif$")
myFiles <- myFiles[which(substr(myFiles,1,7)=="MOD13Q1")]
myFiles <- myFiles[which(substr(myFiles,40,43)=="NDVI")]

for (i in 1:length(myFiles)){
  setwd(dpath) 
  raname <- paste(substr(myFiles[i],1,25),"_NDVI",sep="")  
  ra <- (0.0001*raster(myFiles[i]))
  plot(ra);plot(catch.shp,add=T)
  ra<-crop(ra,catch.shp)
  ra<-mask(ra,catch.shp)
  plot(ra);plot(catch.shp,add=T)
  setwd(outpath)
  writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)      
}



#########################################
# Sec 3 Land use classification
#

#catch.shp <- readOGR(".",layer = "abaya_polygon_30m") 
#catch.shp <- readOGR(".",layer = "chamo_polygon_30m") 
catch <- readOGR(".",layer = "catch_chew") 

#reprojectHDF(hdfName=myFiles[1],filename="MCD12Q1.A2010001.h21v08.051.2014288184234.tif",proj_type="UTM",utm_zone=37,datum="WGS84")
#https://atmos.washington.edu/~robwood/teaching/slides/29~chapter%209%20table%209_2.pdf
#http://www.iawe.org/Proceedings/7APCWE/T2D_1.pdf
#Aerodynamic roughness length(m) 	Classification 	Landscape
#0.0002 	sea 	sea, paved areas, snow-covered flat plain, tide flat, smooth desert
#0.005 	smooth 	beaches, pack ice, morass, snow-covered fields
#0.03 	open 	grass prarie or farm fields, tundra, airports, heather
#0.1 	roughly open 	cultivated area with low crops and occasional obstacles (single bushes)
#0.25 	rough 	high crops, crops of varied height, scattered obstacles such as trees or hedgerows, vineyards
#0.5 	very rough 	mixed farm fields and forest clumps, orchards, scattered buildings
#1.0 	closed 	regular coverage with large size obstacles with open spaces roughly equal to obstacle heights, suburban houses, villages, natural forests
#Greater than or equal to 2 	chaotic 	centers of large towns and cities, irregular forests with scattered clearings

#Class Value Class Description MODIS
#0 Water
#1 Evergreen Needleleaf Forest
#2 Evergreen Broadleaf Forest
#3 Deciduous Needleleaf Forest
#4 Deciduous Broadleaf Forest
#5 Mixed Forest
#6 Closed Shrubland
#7 Open Shrubland
#8 Woody Savanna
#9 Savanna
#10 Grassland
#12 Cropland
#13 Urban or Built-Up
#16 Barren or Sparsely Vegetated
#254 Unclassified
#255 Missing Data

setwd(dpath) 
myFiles <- list.files(pattern = "\\.tif$")
myFiles <- myFiles[which(substr(myFiles,1,7)=="MCD12Q1")]
ra <- raster(myFiles[5])
ra<-crop(ra,catch.shp)
ra<-mask(ra,catch.shp)
plot(ra);plot(catch.shp,add=T)
###
freq<- freq(ra)
pie(freq[,2], labels = freq[,1], main="MCD12Q1- Chew Bahir catchment")

#roughness length classification through  Davenport-Wieringa
ra[which(ra[]==1)]<- 1
ra[which(ra[]==2)]<- 1
ra[which(ra[]==4)]<- 1
ra[which(ra[]==5)]<- 1
ra[which(ra[]==6)]<- 0.03
ra[which(ra[]==7)]<- 0.03
ra[which(ra[]==8)]<- 0.1
ra[which(ra[]==9)]<- 0.1
ra[which(ra[]==10)]<- 0.03
ra[which(ra[]==12)]<- 0.03
ra[which(ra[]==13)]<- 1
ra[which(ra[]==16)]<- 0.0002

raname <- paste(substr(myFiles[5],1,23),"_z_0_roughness",sep="")  
setwd(outpath)
writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)     

#surface drag coefficient classification through  Davenport-Wieringa
setwd(dpath)
myFiles <- list.files(pattern = "\\.tif$")
myFiles <- myFiles[which(substr(myFiles,1,7)=="MCD12Q1")]


ra <- raster(myFiles[5])
ra<-crop(ra,catch.shp)
ra<-mask(ra,catch.shp)
plot(ra);plot(catch.shp,add=T)

ra[which(ra[]==0)]<- NA
ra[which(ra[]==1)]<- 0.030
ra[which(ra[]==2)]<- 0.030
ra[which(ra[]==4)]<- 0.030
ra[which(ra[]==5)]<- 0.030
ra[which(ra[]==6)]<- 0.0047
ra[which(ra[]==7)]<- 0.0047
ra[which(ra[]==8)]<- 0.0075
ra[which(ra[]==9)]<- 0.0075
ra[which(ra[]==10)]<- 0.0047
ra[which(ra[]==12)]<- 0.0047
ra[which(ra[]==13)]<- 0.0047
ra[which(ra[]==16)]<- 0.0014

plot(ra)
raname <- paste(substr(myFiles[5],1,23),"_C_DN_surface_drag",sep="")  
setwd(outpath)
writeRaster(ra, filename=raname, format="GTiff", overwrite=TRUE)  

##################
# (8) see Table Bergner Diplomarbeit, page 58
#     Moisture availability function over land difficult to determine
#     Typical values:
#     Grassland with bush, some acacia trees      0.1
#     Forest                                      0.1
#     Peat bog                                    0.3
#     Coffee, vegetable plantation                0.4
#     Bamboo forest, jungle, conifer forest       0.75
#     Swamps, pypyrus swamps                      0.83
#     Open waters                                 1.0
setwd(dpath)
myFiles <- list.files(pattern = "\\.tif$")
myFiles <- myFiles[which(substr(myFiles,1,7)=="MCD12Q1")]


ra <- raster(myFiles[5])
ra<-crop(ra,catch.shp)
ra<-mask(ra,catch.shp)
plot(ra);plot(catch.shp,add=T)

ra[which(ra[]==0)]<- NA
ra[which(ra[]==1)]<- 0.75
ra[which(ra[]==2)]<- 0.1
ra[which(ra[]==3)]<- 0.75
ra[which(ra[]==4)]<- 0.1
ra[which(ra[]==5)]<- 0.1
ra[which(ra[]==6)]<- 0.1
ra[which(ra[]==7)]<- 0.1
ra[which(ra[]==8)]<- 0.1
ra[which(ra[]==9)]<- 0.1
ra[which(ra[]==10)]<- 0.1
ra[which(ra[]==12)]<- 0.4
ra[which(ra[]==13)]<- 0.1
ra[which(ra[]==16)]<- 0.0
